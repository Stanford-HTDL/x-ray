Module Documentation: utils.py

This module provides various utility functions for working with files, directories, and Google Cloud Storage (GCS).

Author:
- Richard Correro (richard@richardcorrero.com)

Functions:
- get_datetime(time_str: str) -> datetime:
  - Convert a time string to a datetime object.
  - Parameters:
    - time_str (str): The time string to convert.
  - Returns:
    - datetime: The datetime object.
  - Raises:
    - MalformedDateStringError: If the time string is not in the format "%Y_%m".

- get_env_var_with_default(env_var_name: str, default: Any) -> Any:
  - Retrieve the value of an environment variable with a default fallback value.
  - Parameters:
    - env_var_name (str): The name of the environment variable.
    - default (Any): The default value to use if the environment variable is not found.
  - Returns:
    - Any: The value of the environment variable or the default value.

- hash_string(string: str) -> str:
  - Hash a string using the SHA-256 algorithm.
  - Parameters:
    - string (str): The string to hash.
  - Returns:
    - str: The hashed string.

- zip_directory_as_bytes(directory_path: str) -> io.BytesIO:
  - Create a zip archive of a directory.
  - Parameters:
    - directory_path (str): The path to the directory to zip.
  - Returns:
    - io.BytesIO: The zip archive data as a BytesIO object.

- upload_file_to_gcs(
    zip_file_data: io.BytesIO, blob_name: str, client: storage.Client, 
    bucket_name: str, content_type: Optional[str] = 'application/zip',
) -> None:
  - Upload a file to Google Cloud Storage (GCS).
  - Parameters:
    - zip_file_data (io.BytesIO): The zip archive data as a BytesIO object.
    - blob_name (str): The name of the blob to create in GCS.
    - client (storage.Client): The GCS client object.
    - bucket_name (str): The name of the GCS bucket to upload to.
    - content_type (Optional[str]): The content type of the file (default is 'application/zip').
  - Returns:
    - None

- get_signed_url(
    blob_name: str, client: storage.Client, bucket_name: str,
    exp_minutes: Optional[int] = 60
) -> str:
  - Generate a signed URL for accessing a file in GCS.
  - Parameters:
    - blob_name (str): The name of the blob in GCS.
    - client (storage.Client): The GCS client object.
    - bucket_name (str): The name of the GCS bucket.
    - exp_minutes (Optional[int]): The expiration time of the signed URL in minutes (default is 60).
  - Returns:
    - str: The signed URL.

- blob_exists(bucket_name: str, blob_name: str, gcs_creds_path: str) -> bool:
  - Check whether a blob exists in a GCS bucket.
  - Parameters:
    - bucket_name (str): The name of the GCS bucket.
    - blob_name (str): The name of the blob.
    - gcs_creds_path (str): The path to the GCS credentials JSON file.
  - Returns:
    - bool: True if the blob exists, False otherwise.

Dependencies:
- hashlib: Provides various hash functions.
- io: Provides the BytesIO class for working with in-memory binary data.
- os: Provides functions for interacting with the operating system.
- zipfile: Provides classes for creating and extracting ZIP archives.
- datetime: Provides classes for manipulating dates and times.
- typing: Provides support for type hints.
- google.cloud.storage: The Google Cloud Storage library for interacting with GCS.

Note:
- The module assumes that the required dependencies are installed and accessible.
- Make sure to configure the necessary environment variables for proper execution.
